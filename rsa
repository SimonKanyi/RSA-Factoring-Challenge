import sys

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def pollard_rho(n):
    if n % 2 == 0:
        return 2
    x = 2
    y = 2
    d = 1
    f = lambda x: (x**2 + 1) % n
    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)
    return d

def factorize_rsa(n):
    factors = []
    while n > 1:
        factor = pollard_rho(n)
        while n % factor == 0:
            factors.append(factor)
            n //= factor
    return factors

def main(filename):
    with open(filename, 'r') as file:
        for line in file:
            num = int(line.strip())
            factors = factorize_rsa(num)
            factors_str = '*'.join(map(str, factors[:-1])) + '*' + str(factors[-1])
            print(f"{num}={factors_str}")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: rsa <file>")
        sys.exit(1)
    main(sys.argv[1])
